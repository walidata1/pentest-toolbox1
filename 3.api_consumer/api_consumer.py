#!/usr/bin/python
"""
API Consumer Script

This script sends a GET request to an API and retrieves data based on user input.

Usage:
    python api_consumer.py

"""
import sys
import json
import requests
import matplotlib.pyplot as plt

def fetch_data_from_api():
    """
    Fetches data from the specified API.

    Returns:
        dict or None: A dictionary containing the API response data, or None if there was an error.

    Raises:
        requests.RequestException: If there is an issue with the request.

    """
    try:
        # Take user input for the name
        user_name = input(
            "Enter a name to see the probability of which country the name belongs to: "
        )

        # Create API URL with the specified name
        user_api_url = f"https://api.nationalize.io/?name={user_name}"

        # Send a GET request to the API with a timeout of 5 seconds
        response = requests.get(user_api_url, timeout=5)

        # Check if the request was successful (status code 200)
        if response.status_code == 200:
            # Convert JSON response to a Python dictionary
            data = response.json()
            return data

        # If the status code is not 200, print an error message
        print(f"Error in the request. Status code: {response.status_code}")
        return None

    except requests.RequestException as error:
        # Print an error message if there is an issue with the request
        print(f"An error occurred: {error}")
        return None

def plot_probabilities(data):
    """
    Plot the probabilities for each country.

    Args:
        data (dict): API response data.

    Returns:
        None
    """
    if 'country' in data:
        countries = [entry['country_id'] for entry in data['country']]
        probabilities = [entry['probability'] for entry in data['country']]

        plt.barh(countries, probabilities, color='skyblue')
        plt.xlabel('Probability')
        plt.title('Name Probability by Country')
        plt.show()
    else:
        print("No 'country' key found in the API response.")

# Call the function to fetch data from the API
result = fetch_data_from_api()

# Print the result if it is not None
if result:
    print("Data from the API:")
    # Use json.dumps to pretty-print the JSON result with each array on a new line
    print(json.dumps(result, indent=2))
    plot_probabilities(result)

# Exit the script
sys.exit()
