#!/usr/bin/env python
"""
Subdomain Finder Script

Usage:
    python subdomain_finder.py

Example:
    python subdomain_finder.py

Note: Enter the domain without 'www.' (e.g., google.com)
"""

from datetime import datetime
import requests


def subdomain_finder(domain):
    """
    Finds and prints discovered subdomains for the given domain.

    Args:
        domain (str): The main domain to search for subdomains.

    Returns:
        list: List of discovered subdomains.
    """
    found_subdomains = []
    with open("top5.txt", "r", encoding="utf-8") as file:
        for line in file:
            sub_domain = line.strip()
            new_url = f"{sub_domain}.{domain}"
            try:
                res = requests.get(f"http://{new_url}", timeout=5)
                if res.status_code == 200:
                    print("Discovered Subdomain:", new_url)
                    found_subdomains.append(new_url)
            except requests.RequestException:
                # Log or print the exception if needed
                pass
    return found_subdomains


def generate_report(domain, subdomains):
    """
    Generate a report from the vulnerability analysis.

    Args:
        domain (str): The main domain.
        subdomains (list): List of discovered subdomains.

    Returns:
        None
    """
    report_name = f"{domain}_report.txt"
    with open(report_name, "w", encoding="utf-8") as report_file:
        report_file.write(f"Report generated for domain: {domain}\n")
        report_file.write(f"Date: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n")
        report_file.write("Discovered Subdomains:\n")
        for subdomain in subdomains:
            report_file.write(f"- {subdomain}\n")
    print("Report generated:", report_name)


if __name__ == "__main__":
    print("")
    print("*" * 50)
    print("Subdomain Finder Script")
    print("-" * 50)
    print("A report will be generated in a file with the name 'domain_report.txt'")
    print("Enter the domain without 'www.' (e.g., google.com)")
    USER_DOMAIN = input("\nEnter the domain: ").strip()

    start_time = datetime.now()
    print("Script start at:", start_time)
    print("*" * 50)
    discovered_subdomains = subdomain_finder(USER_DOMAIN)
    print("*" * 50)
    generate_report(USER_DOMAIN, discovered_subdomains)
    print("Total Time taken:", datetime.now() - start_time)
